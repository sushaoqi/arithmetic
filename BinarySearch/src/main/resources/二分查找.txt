a) 前提条件：已排序的数组中查找

b) 二分查找的基本思想是：首先确定该查找区间的中间点位置： int mid = (low+upper) / 2；然后将待查找的值与中间点位置的值比较：若相等，则查找成功并返回此位置。若中间点位置值大于待查值，则新的查找区间是中间点位置的左边区域。若中间点位置值小于待查值，则新的查找区间是中间点位置的右边区域。下一次查找是针对新的查找区间进行的。

c) 图例说明：

原始数据： int[] a={5,3,6,1,9,8,2,4,7}; 查找是否存在数字8；

第一步，先用之前学过的排序方法将数组按升序排序：int[] a={1,2,3,4,5,6,7,8,9};

第二步，取中间数：5跟8比较，8大于5 ，取中间数右侧的数组进行比较，即{6,7,8,9}

第三步：重复第一步和第二步，直到找到数据或者比较完所有数据。
